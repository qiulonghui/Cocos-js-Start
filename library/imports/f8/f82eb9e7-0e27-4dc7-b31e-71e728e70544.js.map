{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Game.js"],"names":["Player","require","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreFXPrefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","btnNode","gameOverNode","onLoad","groundY","y","height","currentStar","currentStarX","timer","starDuration","enabled","onStartGame","resetScore","x","active","cmpPlayer","getComponent","startMoveAt","v2","spawnNewStar","gainScore","score","string","toString","fx","spawnScoreFX","node","addChild","setPosition","pos","play","newStar","instantiate","getNewStarPosition","console","log","game","Math","random","scorePool","size","get","init","randX","randY","jumpHeight","maxX","width","gameOver","stopMove","destroy","update","dt"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar Player = require(\"Player\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        scoreFXPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后的消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        // player节点，用于获取角色弹跳的高度，和控制角色行动开关\r\n        player: {\r\n            default: null,\r\n            type: Player\r\n        },\r\n\r\n        // score label 的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\r\n        btnNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        gameOverNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n    },\r\n\r\n    onLoad () {\r\n        // 获取地平面的 y轴坐标\r\n        this.groundY = this.ground.y +　this.ground.height/2;\r\n\r\n        this.currentStar = null;\r\n        this.currentStarX = 0;\r\n\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n\r\n        // 游戏的运行状态\r\n        this.enabled = false;\r\n\r\n        // // 生成一个新的星星\r\n        // this.spawnNewStar();\r\n\r\n        // // 初始化计分\r\n        // this.score = 0;\r\n    },\r\n\r\n    onStartGame() {\r\n        // 分数初始化\r\n        this.resetScore();\r\n        // 游戏运行状态为true\r\n        this.enabled = true;\r\n        // 开始按钮和结束的提示隐藏\r\n        this.btnNode.x = 3000;\r\n        this.gameOverNode.active = false;\r\n        // 重置角色的位置和速度\r\n        var cmpPlayer = this.player.getComponent('Player')\r\n        cmpPlayer.startMoveAt(cc.v2(0, this.groundY))\r\n        // 生成星星\r\n        this.spawnNewStar();\r\n    },\r\n\r\n    gainScore() {\r\n        this.score += 1;\r\n        // 将分数更新到scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放特效\r\n        var fx = this.spawnScoreFX();\r\n        this.node.addChild(fx.node);\r\n        fx.node.setPosition(pos);\r\n        fx.play();\r\n    },\r\n\r\n    resetScore() {\r\n        this.score = 0;\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n    },\r\n\r\n    spawnNewStar() {\r\n        // 这个函数方法用来生成一个新的star \r\n\r\n        // 使用给定的预制资源生成一个新的节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加的Canvas节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 在星星组件上暂存 Game对象引用\r\n        console.log(this) // this指向当前组件\r\n        console.log(newStar) // star节点\r\n        console.log(newStar.getComponent('Star'))\r\n        newStar.getComponent('Star').game = this;\r\n\r\n        // 消失的时间在范围中取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration-this.minStarDuration);\r\n        this.timer = 0; // 重置计时器\r\n        this.currentStar = newStar;\r\n    },\r\n\r\n    spawnScoreFX: function () {\r\n        var fx;\r\n        if (this.scorePool.size() > 0) {\r\n            fx = this.scorePool.get();\r\n            return fx.getComponent('ScoreFX');\r\n        } else {\r\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('ScoreFX');\r\n            fx.init(this);\r\n            return fx;\r\n        }\r\n    },\r\n\r\n    getNewStarPosition() {\r\n        // 这个函数方法用来返回一个随机的x,y坐标\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳的高度，随机得到一个星星的y坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度， 随机得到一个星星x坐标\r\n        var maxX = this.node.width/2;\r\n        console.log(this, this.node, this.node.width, this.ground.y)\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n\r\n        //返回星星的坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n    \r\n    gameOver() {\r\n        this.gameOverNode.active = true;\r\n        this.player.enabled = false;\r\n        this.player.stopMove();\r\n        this.currentStar.destroy();\r\n        this.btnNode.x = 0;\r\n    },\r\n\r\n    update (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            this.enabled = false;\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    }\r\n});\r\n"]}